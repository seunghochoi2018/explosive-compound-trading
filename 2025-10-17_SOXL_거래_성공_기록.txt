================================================================================
2025-10-17 SOXL 거래 성공까지의 과정 기록
================================================================================

## 문제 상황
- SOXL 17주 보유 중 (수동 구매)
- 잔고 조회 시 $0 표시 → 자동매매 불가
- API 주문 시도 시 여러 에러 발생

================================================================================
## 해결한 문제들
================================================================================

### 1. 잔고 계산 버그 수정
**문제**: get_usd_balance()가 현금만 확인하고 보유 종목 평가금액 무시

**원인**:
- output2 (현금잔고)만 확인
- output1 (보유종목 리스트) 무시

**해결**:
```python
# 보유종목 평가금액 합산
holdings_value = 0.0
for holding in output1:
    eval_amt = holding.get('ovrs_stck_evlu_amt', '0')
    try:
        holdings_value += float(str(eval_amt).replace(',', ''))
    except:
        pass

# 총 잔고 = 현금 + 보유종목 평가금액
total_balance = cash_balance + holdings_value
```

**결과**: $0.00 → $700.49 (현금 $0 + 보유종목 $700.49)

---

### 2. APBK1269 에러 (주문시간 입력오류)
**시도한 것**:
- 기존 토큰 사용 (새로 발급 안 함)
- 미체결 주문 확인 (0개)
- 거래 시간 확인 (정상 개장 중)

**원인**: Hashkey 누락!

**해결**: Hashkey 생성 함수 추가
```python
def generate_hashkey(data_dict):
    hash_url = f"{base_url}/uapi/hashkey"
    hash_headers = {
        "appkey": app_key,
        "appsecret": app_secret,
        "content-type": "application/json"
    }
    hash_response = requests.post(hash_url, headers=hash_headers, json=data_dict, timeout=5)
    if hash_response.status_code == 200:
        return hash_response.json().get('HASH', '')
    return ""
```

---

### 3. APBK0656 에러 (해당거래구분불가능합니다)
**시도한 것**:
- PDNO: "A980679" 사용 (문서 기준)
- OVRS_EXCG_CD: "NASD" 사용 (문서 기준)
- ORD_DVSN: "00" (시장가로 착각, 실제로는 지정가)

**돌파구**: 잔고 조회 raw 데이터 확인!
```json
{
  "ovrs_pdno": "SOXL",        // 티커 그대로!
  "ovrs_excg_cd": "AMEX",     // AMEX!
  "ovrs_cblc_qty": "17"
}
```

**해결**: AMEX + SOXL 티커 직접 사용!

---

### 4. APTR0057 에러 (주문 단가를 확인 하시기 바랍니다)
**문제**: 가격 소수점 자리수 오류

**시도**: `str(current_price)` → "40.9398" (소수점 4자리)

**해결**: 소수점 2자리로 포맷
```python
"OVRS_ORD_UNPR": f"{current_price:.2f}"  # "40.94"
```

================================================================================
## 최종 성공 조합
================================================================================

### ✅ SOXL 매도 주문 (TTTT1006U)
```python
sell_data = {
    "CANO": "43113014",
    "ACNT_PRDT_CD": "01",
    "OVRS_EXCG_CD": "AMEX",              # ⚠️ AMEX (NASD 아님!)
    "PDNO": "SOXL",                      # ⚠️ 티커 직접 (A980679 아님!)
    "ORD_QTY": "1",
    "OVRS_ORD_UNPR": "40.94",           # ⚠️ 소수점 2자리
    "ORD_SVR_DVSN_CD": "0",
    "ORD_DVSN": "00"                     # 지정가
}

hashkey = generate_hashkey(sell_data)   # ⚠️ Hashkey 필수!

headers = {
    "authorization": f"Bearer {access_token}",
    "appkey": app_key,
    "appsecret": app_secret,
    "tr_id": "TTTT1006U",
    "custtype": "P",
    "hashkey": hashkey,                  # ⚠️ 헤더에 포함
    "Content-Type": "application/json"
}
```

**결과**:
- HTTP 200
- rt_cd: 0
- msg_cd: APBK0013
- msg1: "주문 정상 완료 되었습니다."
- 주문번호: 0031895400

---

### ✅ SOXL 매수 주문 (TTTT1002U)
```python
buy_data = {
    "CANO": "43113014",
    "ACNT_PRDT_CD": "01",
    "OVRS_EXCG_CD": "AMEX",              # ⚠️ AMEX
    "PDNO": "SOXL",                      # ⚠️ 티커 직접
    "ORD_QTY": "1",
    "OVRS_ORD_UNPR": "40.78",           # ⚠️ 소수점 2자리
    "ORD_SVR_DVSN_CD": "0",
    "ORD_DVSN": "00"                     # 지정가
}

hashkey = generate_hashkey(buy_data)

headers = {
    "authorization": f"Bearer {access_token}",
    "appkey": app_key,
    "appsecret": app_secret,
    "tr_id": "TTTT1002U",               # ⚠️ 매수
    "custtype": "P",
    "hashkey": hashkey,
    "Content-Type": "application/json"
}
```

**결과**:
- HTTP 200
- rt_cd: 0
- msg_cd: APBK0013
- msg1: "주문 정상 완료 되었습니다."
- 주문번호: 0031896216

================================================================================
## 핵심 교훈
================================================================================

1. **문서와 실제가 다를 수 있다!**
   - 문서: PDNO는 "A980679" 사용
   - 실제: "SOXL" 티커 직접 사용

2. **잔고 조회 결과가 힌트!**
   - 잔고 조회 시 ovrs_excg_cd, ovrs_pdno 확인
   - 주문 시 동일한 값 사용

3. **에러 메시지로 접근 방향 파악**
   - APBK1269 → Hashkey 문제
   - APBK0656 → 거래소/종목코드 문제
   - APTR0057 → 가격 포맷 문제

4. **공식 엑셀 스펙 확인 필수**
   - 코드/해외주식 주문[v1_해외주식-001].xlsx
   - ORD_DVSN 상세 설명 확인

5. **작동하는 코드 분석**
   - 코드4/final_sell_soxl.py
   - 코드4/test_tqqq_order.py
   - Hashkey, ORD_DVSN 구조 참고

================================================================================
## 수정된 파일 목록
================================================================================

### 코드5 폴더:
1. kis_llm_trader_v2_explosive.py
   - get_usd_balance() 수정 (보유종목 평가금액 포함)

2. test_balance_fix.py
   - 잔고 계산 수정 검증 스크립트

3. test_sell_buy_with_hashkey.py
   - Hashkey 포함한 매도/매수 테스트

4. test_sell_amex.py
   - AMEX 거래소 코드 테스트

5. test_buy_soxl.py
   - SOXL 재매수 성공 스크립트

6. check_pdno_raw.py
   - 잔고 조회 raw 데이터 확인

7. IMPORTANT_KIS_API_인증서필요.txt
   - 주요 발견사항 문서화

================================================================================
## 자동매매 준비 완료!
================================================================================

이제 다음이 가능합니다:
✅ 정확한 잔고 조회 (현금 + 보유종목)
✅ SOXL 매도 주문
✅ SOXL 매수 주문
✅ 실시간 자동매매

**주의사항**:
- Hashkey는 주문 데이터마다 새로 생성
- 가격은 항상 소수점 2자리 (f"{price:.2f}")
- SOXL은 AMEX + 티커 직접 사용
- 토큰은 kis_token.json의 기존 토큰 재사용

================================================================================
2025-10-17 기록 완료
================================================================================
